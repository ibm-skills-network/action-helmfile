apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "ibm-object-storage-plugin.drivername" . }}
  namespace: {{ template "ibm-object-storage-plugin.namespace" . }}
  annotations:
    razee.io/source-url: {{ template "ibm-object-storage-plugin.repoSourceUrl" . }}
    razee.io/build-url: {{ template "ibm-object-storage-plugin.buildUrl" . }}
  labels:
    app: {{ template "ibm-object-storage-plugin.drivername" . }}
    app.kubernetes.io/name: {{ template "ibm-object-storage-plugin.drivername" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailableNodeCount }}
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "ibm-object-storage-plugin.drivername" . }}
  template:
    metadata:
      labels:
        app: {{ template "ibm-object-storage-plugin.drivername" . }}
        app.kubernetes.io/name: {{ template "ibm-object-storage-plugin.drivername" . }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        productID: "30c4102281944b2b9c3ca5de07b877bb"
        productMetric: "FREE"
        productName: "ibm-object-storage-plugin"
        productChargedContainers: "All"
        productVersion: "{{ .Chart.AppVersion }}"
        autoUpdate: {{ randAlphaNum 5 | quote }}
        razee.io/source-url: {{ template "ibm-object-storage-plugin.repoSourceUrl" . }}
        razee.io/build-url: {{ template "ibm-object-storage-plugin.buildUrl" . }}
    spec:
      priorityClassName: system-node-critical
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      tolerations:
      - operator: "Exists"
      hostNetwork: true
      hostPID: false
      hostIPC: false
      serviceAccountName: ibmcloud-object-storage-driver
      {{- if contains "k8s" (.Values.platform | quote | lower) }}
      initContainers:
      - name: s3fs-installer-container
        image: "{{ .Values.image.driverImage.ibmContainerRegistry }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        tty: true
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /host
          name: host-root
        command: ["/bin/sh", "-c", "./mount-helper/s3fsInstallOnWokerNode.sh"]
      hostIPC: true
      hostNetwork: true
      hostPID: true
      preemptionPolicy: PreemptLowerPriority
      restartPolicy: Always
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      {{- end }}
      containers:
        - name: {{ template "ibm-object-storage-plugin.drivername" . }}-container
          {{- if or (contains "RHOCP" (.Values.provider | quote | upper)) (contains "SATELLITE" (.Values.provider | quote | upper))  }}
          image: "{{ .Values.image.driverImage.publicRegistry }}"
          {{- else }}
          image: "{{ .Values.image.driverImage.ibmContainerRegistry }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
              ephemeral-storage: {{ .Values.resource.ephemeralStorageReq }}
            limits:
              memory: {{ .Values.resource.memory }}
              cpu: {{ .Values.resource.cpu }}
              ephemeral-storage: {{ .Values.resource.ephemeralStorageLimit }}
          env:
            - name: S3FSBUILD
              value: {{ .Values.s3fsVersion }}
          securityContext:
            capabilities:
              drop: ["ALL"]
            privileged: false
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - version1=$(cat /home/s3-dep/version.txt | grep "^Version" );
                version2=$(/host/kubernetes/kubelet-plugins/volume/exec/ibm~ibmc-s3fs/ibmc-s3fs version);
                if [ "$version1" = "$version2" ]; then exit 0; else exit 1; fi
            initialDelaySeconds: 59
            timeoutSeconds: 5
            periodSeconds: 60
            failureThreshold: 1
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - version1=$(cat /home/s3-dep/version.txt | grep "^Version" );
                version2=$(/host/kubernetes/kubelet-plugins/volume/exec/ibm~ibmc-s3fs/ibmc-s3fs version);
                if [ "$version1" == "$version2" ]; then exit 0; else exit 1; fi
            initialDelaySeconds: 59
            timeoutSeconds: 5
            periodSeconds: 60
            failureThreshold: 1
          volumeMounts:
             - mountPath: /host/kubernetes
               name: kube-driver
             - mountPath: /host/local/bin
               name: usr-local
             - mountPath: /host/usr/lib
               name: usr-lib
               readOnly: true
             {{- if contains "REDHAT" (.Values.workerOS | quote | upper) }}
             - mountPath: /host/etc/os-release
               name: etc-os-release-mount
               readOnly: true
             {{- else }}
             - mountPath: /host/etc/lsb-release
               name: etc-lsb-release-mount
               readOnly: true
             {{- end }}
             - mountPath: /host/log
               name: host-logs
               readOnly: true
      volumes:
        - name: kube-driver
          hostPath:
              path: {{.Values.kubeDriver}}
        - name: usr-local
          hostPath:
             path: /usr/local/bin
        - name: usr-lib
          hostPath:
             path: /usr/lib
        {{- if contains "REDHAT" (.Values.workerOS | quote | upper) }}
        - name: etc-os-release-mount
          hostPath:
             path: /etc/os-release
        {{- else }}
        - name: etc-lsb-release-mount
          hostPath:
             path: /etc/lsb-release
        {{- end }}
        - name: host-logs
          hostPath:
             path: /var/log
        {{- if contains "k8s" (.Values.platform | quote | lower) }}
        - name: host-root
          hostPath:
             path: /
        {{- end }}
